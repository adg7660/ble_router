/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: Parameter.proto */

#ifndef PROTOBUF_C_Parameter_2eproto__INCLUDED
#define PROTOBUF_C_Parameter_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "IdentityMsg.pb-c.h"

typedef struct _Protocol__ParameterReq Protocol__ParameterReq;
typedef struct _Protocol__Parameter Protocol__Parameter;
typedef struct _Protocol__ParameterRsp Protocol__ParameterRsp;


/* --- enums --- */


/* --- messages --- */

/*
 * 请求读取参数信息
 */
struct  _Protocol__ParameterReq
{
  ProtobufCMessage base;
  Protocol__IdentityMsg *iden;
};
#define PROTOCOL__PARAMETER_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__parameter_req__descriptor) \
    , NULL }


struct  _Protocol__Parameter
{
  ProtobufCMessage base;
  /*
   * 服务器域名或IP(第一个是主服务器)
   */
  size_t n_serverhost;
  char **serverhost;
  /*
   * 服务器端口(第一个是主服务器)
   */
  size_t n_serverport;
  int32_t *serverport;
  /*
   * 报警短信接收机号码
   */
  size_t n_smsalarmreceiverlist;
  char **smsalarmreceiverlist;
  /*
   * 短信或电话唤醒白名单
   */
  size_t n_smswakeupwhitelist;
  char **smswakeupwhitelist;
  /*
   * 环境采样门限: 电量低于门限时停止采样, 毫安
   */
  protobuf_c_boolean has_envsamplethreshold;
  int32_t envsamplethreshold;
  /*
   * 行为采样门限: 电量低于门限时停止采样，毫安
   */
  protobuf_c_boolean has_behaviorsamplethreshold;
  int32_t behaviorsamplethreshold;
  /*
   * GPS采样门限: 电量低于门限时停止采样，毫安
   */
  protobuf_c_boolean has_gpssamplethreshold;
  int32_t gpssamplethreshold;
  /*
   * 通信门限: 电量低于门限时停止通信，毫安
   */
  protobuf_c_boolean has_communicationthreshold;
  int32_t communicationthreshold;
  /*
   * 发情采样门限: 电量低于门限时停止采样，毫安
   */
  protobuf_c_boolean has_estrussamplethreshold;
  int32_t estrussamplethreshold;
  /*
   * 发情采样参数, 除以10000
   */
  protobuf_c_boolean has_estrusparameterone;
  int32_t estrusparameterone;
};
#define PROTOCOL__PARAMETER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__parameter__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


/*
 * 读取参数信息回应
 */
struct  _Protocol__ParameterRsp
{
  ProtobufCMessage base;
  Protocol__IdentityMsg *iden;
  Protocol__Parameter *parameterinfo;
};
#define PROTOCOL__PARAMETER_RSP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__parameter_rsp__descriptor) \
    , NULL, NULL }


/* Protocol__ParameterReq methods */
void   protocol__parameter_req__init
                     (Protocol__ParameterReq         *message);
size_t protocol__parameter_req__get_packed_size
                     (const Protocol__ParameterReq   *message);
size_t protocol__parameter_req__pack
                     (const Protocol__ParameterReq   *message,
                      uint8_t             *out);
size_t protocol__parameter_req__pack_to_buffer
                     (const Protocol__ParameterReq   *message,
                      ProtobufCBuffer     *buffer);
Protocol__ParameterReq *
       protocol__parameter_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__parameter_req__free_unpacked
                     (Protocol__ParameterReq *message,
                      ProtobufCAllocator *allocator);
/* Protocol__Parameter methods */
void   protocol__parameter__init
                     (Protocol__Parameter         *message);
size_t protocol__parameter__get_packed_size
                     (const Protocol__Parameter   *message);
size_t protocol__parameter__pack
                     (const Protocol__Parameter   *message,
                      uint8_t             *out);
size_t protocol__parameter__pack_to_buffer
                     (const Protocol__Parameter   *message,
                      ProtobufCBuffer     *buffer);
Protocol__Parameter *
       protocol__parameter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__parameter__free_unpacked
                     (Protocol__Parameter *message,
                      ProtobufCAllocator *allocator);
/* Protocol__ParameterRsp methods */
void   protocol__parameter_rsp__init
                     (Protocol__ParameterRsp         *message);
size_t protocol__parameter_rsp__get_packed_size
                     (const Protocol__ParameterRsp   *message);
size_t protocol__parameter_rsp__pack
                     (const Protocol__ParameterRsp   *message,
                      uint8_t             *out);
size_t protocol__parameter_rsp__pack_to_buffer
                     (const Protocol__ParameterRsp   *message,
                      ProtobufCBuffer     *buffer);
Protocol__ParameterRsp *
       protocol__parameter_rsp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__parameter_rsp__free_unpacked
                     (Protocol__ParameterRsp *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Protocol__ParameterReq_Closure)
                 (const Protocol__ParameterReq *message,
                  void *closure_data);
typedef void (*Protocol__Parameter_Closure)
                 (const Protocol__Parameter *message,
                  void *closure_data);
typedef void (*Protocol__ParameterRsp_Closure)
                 (const Protocol__ParameterRsp *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor protocol__parameter_req__descriptor;
extern const ProtobufCMessageDescriptor protocol__parameter__descriptor;
extern const ProtobufCMessageDescriptor protocol__parameter_rsp__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_Parameter_2eproto__INCLUDED */
