/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: App.proto */

#ifndef PROTOBUF_C_App_2eproto__INCLUDED
#define PROTOBUF_C_App_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "IdentityMsg.pb-c.h"

typedef struct _Protocol__AppReq Protocol__AppReq;
typedef struct _Protocol__AppRsp Protocol__AppRsp;


/* --- enums --- */


/* --- messages --- */

struct  _Protocol__AppReq
{
  ProtobufCMessage base;
  Protocol__IdentityMsg *iden;
  /*
   * 1 - 激活确认
   */
  protobuf_c_boolean has_command;
  int32_t command;
};
#define PROTOCOL__APP_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__app_req__descriptor) \
    , NULL, 0, 0 }


struct  _Protocol__AppRsp
{
  ProtobufCMessage base;
  Protocol__IdentityMsg *iden;
  /*
   * 1 - 激活, 2 - 升级, 3 - BLE升级, 4 -  Sensor调试
   */
  protobuf_c_boolean has_linktype;
  int32_t linktype;
  /*
   * 0 - 待定, 1 - 激活, 2 - 不激活
   */
  protobuf_c_boolean has_workmode;
  int32_t workmode;
};
#define PROTOCOL__APP_RSP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__app_rsp__descriptor) \
    , NULL, 0, 0, 0, 0 }


/* Protocol__AppReq methods */
void   protocol__app_req__init
                     (Protocol__AppReq         *message);
size_t protocol__app_req__get_packed_size
                     (const Protocol__AppReq   *message);
size_t protocol__app_req__pack
                     (const Protocol__AppReq   *message,
                      uint8_t             *out);
size_t protocol__app_req__pack_to_buffer
                     (const Protocol__AppReq   *message,
                      ProtobufCBuffer     *buffer);
Protocol__AppReq *
       protocol__app_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__app_req__free_unpacked
                     (Protocol__AppReq *message,
                      ProtobufCAllocator *allocator);
/* Protocol__AppRsp methods */
void   protocol__app_rsp__init
                     (Protocol__AppRsp         *message);
size_t protocol__app_rsp__get_packed_size
                     (const Protocol__AppRsp   *message);
size_t protocol__app_rsp__pack
                     (const Protocol__AppRsp   *message,
                      uint8_t             *out);
size_t protocol__app_rsp__pack_to_buffer
                     (const Protocol__AppRsp   *message,
                      ProtobufCBuffer     *buffer);
Protocol__AppRsp *
       protocol__app_rsp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__app_rsp__free_unpacked
                     (Protocol__AppRsp *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Protocol__AppReq_Closure)
                 (const Protocol__AppReq *message,
                  void *closure_data);
typedef void (*Protocol__AppRsp_Closure)
                 (const Protocol__AppRsp *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor protocol__app_req__descriptor;
extern const ProtobufCMessageDescriptor protocol__app_rsp__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_App_2eproto__INCLUDED */
