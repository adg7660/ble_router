/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: Status.proto */

#ifndef PROTOBUF_C_Status_2eproto__INCLUDED
#define PROTOBUF_C_Status_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "IdentityMsg.pb-c.h"

typedef struct _Protocol__StatusReq Protocol__StatusReq;
typedef struct _Protocol__Status Protocol__Status;


/* --- enums --- */


/* --- messages --- */

struct  _Protocol__StatusReq
{
  ProtobufCMessage base;
  Protocol__IdentityMsg *iden;
  size_t n_statusinfo;
  Protocol__Status **statusinfo;
};
#define PROTOCOL__STATUS_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__status_req__descriptor) \
    , NULL, 0,NULL }


struct  _Protocol__Status
{
  ProtobufCMessage base;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
  /*
   *138 is mark downloaded setting
   */
  protobuf_c_boolean has_statustype;
  uint32_t statustype;
  protobuf_c_boolean has_statusvalue;
  uint32_t statusvalue;
  protobuf_c_boolean has_firmwareversion;
  uint32_t firmwareversion;
  protobuf_c_boolean has_voltage;
  int32_t voltage;
};
#define PROTOCOL__STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__status__descriptor) \
    , 0, 0u, 0, 0u, 0, 0u, 0, 0u, 0, 0 }


/* Protocol__StatusReq methods */
void   protocol__status_req__init
                     (Protocol__StatusReq         *message);
size_t protocol__status_req__get_packed_size
                     (const Protocol__StatusReq   *message);
size_t protocol__status_req__pack
                     (const Protocol__StatusReq   *message,
                      uint8_t             *out);
size_t protocol__status_req__pack_to_buffer
                     (const Protocol__StatusReq   *message,
                      ProtobufCBuffer     *buffer);
Protocol__StatusReq *
       protocol__status_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__status_req__free_unpacked
                     (Protocol__StatusReq *message,
                      ProtobufCAllocator *allocator);
/* Protocol__Status methods */
void   protocol__status__init
                     (Protocol__Status         *message);
size_t protocol__status__get_packed_size
                     (const Protocol__Status   *message);
size_t protocol__status__pack
                     (const Protocol__Status   *message,
                      uint8_t             *out);
size_t protocol__status__pack_to_buffer
                     (const Protocol__Status   *message,
                      ProtobufCBuffer     *buffer);
Protocol__Status *
       protocol__status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__status__free_unpacked
                     (Protocol__Status *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Protocol__StatusReq_Closure)
                 (const Protocol__StatusReq *message,
                  void *closure_data);
typedef void (*Protocol__Status_Closure)
                 (const Protocol__Status *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor protocol__status_req__descriptor;
extern const ProtobufCMessageDescriptor protocol__status__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_Status_2eproto__INCLUDED */
