/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: Env.proto */

#ifndef PROTOBUF_C_Env_2eproto__INCLUDED
#define PROTOBUF_C_Env_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "IdentityMsg.pb-c.h"

typedef struct _Protocol__EnvReq Protocol__EnvReq;
typedef struct _Protocol__Env Protocol__Env;


/* --- enums --- */


/* --- messages --- */

struct  _Protocol__EnvReq
{
  ProtobufCMessage base;
  Protocol__IdentityMsg *iden;
  size_t n_envinfo;
  Protocol__Env **envinfo;
};
#define PROTOCOL__ENV_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__env_req__descriptor) \
    , NULL, 0,NULL }


struct  _Protocol__Env
{
  ProtobufCMessage base;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
  /*
   * 剩余电量: 百分比
   */
  protobuf_c_boolean has_batterypower;
  int32_t batterypower;
  /*
   * 电池电压: 毫伏
   */
  protobuf_c_boolean has_batteryvoltage;
  int32_t batteryvoltage;
  /*
   * 充电电压: 毫伏
   */
  protobuf_c_boolean has_chargevoltage;
  int32_t chargevoltage;
  /*
   * 充电电流: 毫安, 精确到小数点后两位(*✖️100)
   */
  protobuf_c_boolean has_chargecurrent;
  int32_t chargecurrent;
  /*
   * 内部温度: 摄氏度, 精确到小数点后一位(*10)
   */
  protobuf_c_boolean has_innertemperature;
  int32_t innertemperature;
  /*
   * 内部相对湿度: 精确到1%
   */
  protobuf_c_boolean has_innerhumidity;
  int32_t innerhumidity;
  /*
   * 内部气压: 单位：帕
   */
  protobuf_c_boolean has_innerpressure;
  int32_t innerpressure;
  /*
   * 光照强度: 单位：勒克斯
   */
  protobuf_c_boolean has_ambientlight;
  int32_t ambientlight;
};
#define PROTOCOL__ENV__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__env__descriptor) \
    , 0, 0u, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


/* Protocol__EnvReq methods */
void   protocol__env_req__init
                     (Protocol__EnvReq         *message);
size_t protocol__env_req__get_packed_size
                     (const Protocol__EnvReq   *message);
size_t protocol__env_req__pack
                     (const Protocol__EnvReq   *message,
                      uint8_t             *out);
size_t protocol__env_req__pack_to_buffer
                     (const Protocol__EnvReq   *message,
                      ProtobufCBuffer     *buffer);
Protocol__EnvReq *
       protocol__env_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__env_req__free_unpacked
                     (Protocol__EnvReq *message,
                      ProtobufCAllocator *allocator);
/* Protocol__Env methods */
void   protocol__env__init
                     (Protocol__Env         *message);
size_t protocol__env__get_packed_size
                     (const Protocol__Env   *message);
size_t protocol__env__pack
                     (const Protocol__Env   *message,
                      uint8_t             *out);
size_t protocol__env__pack_to_buffer
                     (const Protocol__Env   *message,
                      ProtobufCBuffer     *buffer);
Protocol__Env *
       protocol__env__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__env__free_unpacked
                     (Protocol__Env *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Protocol__EnvReq_Closure)
                 (const Protocol__EnvReq *message,
                  void *closure_data);
typedef void (*Protocol__Env_Closure)
                 (const Protocol__Env *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor protocol__env_req__descriptor;
extern const ProtobufCMessageDescriptor protocol__env__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_Env_2eproto__INCLUDED */
